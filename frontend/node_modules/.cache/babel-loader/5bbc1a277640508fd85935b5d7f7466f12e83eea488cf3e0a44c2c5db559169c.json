{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jkswi\\\\EchoMind\\\\frontend\\\\src\\\\components\\\\TranscriptDisplay.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscriptDisplay = ({\n  transcript,\n  intent,\n  confidence\n}) => {\n  const getConfidenceColor = confidence => {\n    if (confidence >= 0.8) return '#4CAF50'; // Green\n    if (confidence >= 0.6) return '#FF9800'; // Orange\n    return '#F44336'; // Red\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transcript-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCDD What you said:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"transcript\",\n      children: [\"\\\"\", transcript, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83C\\uDFAF Analysis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Intent:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 12\n        }, this), \" \", intent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Confidence:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: getConfidenceColor(confidence),\n            fontWeight: 'bold',\n            marginLeft: '5px'\n          },\n          children: [(confidence * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = TranscriptDisplay;\nexport default TranscriptDisplay;\nvar _c;\n$RefreshReg$(_c, \"TranscriptDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TranscriptDisplay","transcript","intent","confidence","getConfidenceColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontWeight","marginLeft","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/jkswi/EchoMind/frontend/src/components/TranscriptDisplay.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface TranscriptDisplayProps {\r\n  transcript: string;\r\n  intent: string;\r\n  confidence: number;\r\n}\r\n\r\nconst TranscriptDisplay: React.FC<TranscriptDisplayProps> = ({ \r\n  transcript, \r\n  intent, \r\n  confidence \r\n}) => {\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 0.8) return '#4CAF50'; // Green\r\n    if (confidence >= 0.6) return '#FF9800'; // Orange\r\n    return '#F44336'; // Red\r\n  };\r\n\r\n  return (\r\n    <div className=\"transcript-display\">\r\n      <h3>üìù What you said:</h3>\r\n      <p className=\"transcript\">\"{transcript}\"</p>\r\n      \r\n      <div className=\"analysis\">\r\n        <h4>üéØ Analysis:</h4>\r\n        <p><strong>Intent:</strong> {intent}</p>\r\n        <p>\r\n          <strong>Confidence:</strong> \r\n          <span \r\n            style={{ \r\n              color: getConfidenceColor(confidence),\r\n              fontWeight: 'bold',\r\n              marginLeft: '5px'\r\n            }}\r\n          >\r\n            {(confidence * 100).toFixed(1)}%\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TranscriptDisplay;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,MAAMC,iBAAmD,GAAGA,CAAC;EAC3DC,UAAU;EACVC,MAAM;EACNC;AACF,CAAC,KAAK;EACJ,MAAMC,kBAAkB,GAAID,UAAkB,IAAK;IACjD,IAAIA,UAAU,IAAI,GAAG,EAAE,OAAO,SAAS,CAAC,CAAC;IACzC,IAAIA,UAAU,IAAI,GAAG,EAAE,OAAO,SAAS,CAAC,CAAC;IACzC,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC;EAED,oBACEJ,OAAA;IAAKM,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCP,OAAA;MAAAO,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BX,OAAA;MAAGM,SAAS,EAAC,YAAY;MAAAC,QAAA,GAAC,IAAC,EAACL,UAAU,EAAC,IAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE5CX,OAAA;MAAKM,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBP,OAAA;QAAAO,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBX,OAAA;QAAAO,QAAA,gBAAGP,OAAA;UAAAO,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACR,MAAM;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCX,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,EAAQ;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5BX,OAAA;UACEY,KAAK,EAAE;YACLC,KAAK,EAAER,kBAAkB,CAACD,UAAU,CAAC;YACrCU,UAAU,EAAE,MAAM;YAClBC,UAAU,EAAE;UACd,CAAE;UAAAR,QAAA,GAED,CAACH,UAAU,GAAG,GAAG,EAAEY,OAAO,CAAC,CAAC,CAAC,EAAC,GACjC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GAlCIhB,iBAAmD;AAoCzD,eAAeA,iBAAiB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}