{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jkswi\\\\EchoMind\\\\frontend\\\\src\\\\components\\\\ResponsePlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResponsePlayer = ({\n  responseText,\n  audioUrl\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  useEffect(() => {\n    // Auto-play the response (note: many browsers require user interaction first)\n    if (audioRef.current) {\n      audioRef.current.play().catch(err => {\n        console.log('Auto-play prevented:', err);\n      });\n    }\n  }, [audioUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"response-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83E\\uDD16 AI Response:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"response-text\",\n      children: [\"\\\"\", responseText, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      controls: true,\n      src: `http://localhost:8000${audioUrl}`,\n      className: \"audio-player\",\n      children: \"Your browser does not support audio playback.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ResponsePlayer, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n_c = ResponsePlayer;\nexport default ResponsePlayer;\nvar _c;\n$RefreshReg$(_c, \"ResponsePlayer\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","ResponsePlayer","responseText","audioUrl","_s","audioRef","current","play","catch","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/jkswi/EchoMind/frontend/src/components/ResponsePlayer.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\ninterface ResponsePlayerProps {\r\n  responseText: string;\r\n  audioUrl: string;\r\n}\r\n\r\nconst ResponsePlayer: React.FC<ResponsePlayerProps> = ({ \r\n  responseText, \r\n  audioUrl \r\n}) => {\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  useEffect(() => {\r\n    // Auto-play the response (note: many browsers require user interaction first)\r\n    if (audioRef.current) {\r\n      audioRef.current.play().catch(err => {\r\n        console.log('Auto-play prevented:', err);\r\n      });\r\n    }\r\n  }, [audioUrl]);\r\n\r\n  return (\r\n    <div className=\"response-player\">\r\n      <h3>ðŸ¤– AI Response:</h3>\r\n      <p className=\"response-text\">\"{responseText}\"</p>\r\n      \r\n      <audio \r\n        ref={audioRef}\r\n        controls\r\n        src={`http://localhost:8000${audioUrl}`}\r\n        className=\"audio-player\"\r\n      >\r\n        Your browser does not support audio playback.\r\n      </audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResponsePlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOjD,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,YAAY;EACZC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAGR,MAAM,CAAmB,IAAI,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,IAAIO,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;QACnCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MAC1C,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bb,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjB,OAAA;MAAGY,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,IAAC,EAACX,YAAY,EAAC,IAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEjDjB,OAAA;MACEkB,GAAG,EAAEb,QAAS;MACdc,QAAQ;MACRC,GAAG,EAAE,wBAAwBjB,QAAQ,EAAG;MACxCS,SAAS,EAAC,cAAc;MAAAC,QAAA,EACzB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACb,EAAA,CA9BIH,cAA6C;AAAAoB,EAAA,GAA7CpB,cAA6C;AAgCnD,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}